<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>dk.gov.data</groupId>
  <artifactId>ea-modelling-tools-java</artifactId>
  <version>0.6.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>EA Modelling Tools Java</name>
  <scm>
    <!-- local repository -->
    <!-- Use the following command to release locally: mvn release:prepare.
    After that, push the changes to the remote repository.
     -->
    <developerConnection>scm:git:file://.</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    <!-- user properties for appassembler plugin to http://www.mojohaus.org/appassembler/appassembler-maven-plugin/assemble-mojo.html -->
    <assembleDirectory>${project.build.directory}/appassembler</assembleDirectory>
    <logsDirectory>log</logsDirectory>
    
    <!-- Properties defined in this POM (thus not defined in maven or in maven plugin -->
    <myBinFolder>bin</myBinFolder><!-- bin is also default in plugin, specified here so it can be used in assembly.xml -->
    <myConfigurationDirectory>conf</myConfigurationDirectory>
    <myRepositoryName>repo</myRepositoryName><!-- repo is also default in plugin, specified here so it can be used in assembly.xml -->
  </properties>

  <dependencies>
    <dependency>
    <!-- Copied from EA installation folder:
    
      mvn install:install-file -Dfile="C:\Program Files\Sparx Systems\EA\Java API\eaapi.jar"
      -DgroupId=org.sparx -DartifactId=eaapi -Dversion=replace_with_ea_program_version -Dpackaging=jar
      
      The version is equal to the Program Version of Enterprise Architect (see "About Enterprise Architect").

      This is the same way as is done in ShapeChange: see https://github.com/ShapeChange/ShapeChange/blob/master/pom.xml
      
      See also https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html -->
      <groupId>org.sparx</groupId>
      <artifactId>eaapi</artifactId>
      <version>16.1.1627</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.15.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.10.0</version>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>1.8.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>2.12.2</version>
      <exclusions>
        <exclusion><!-- To avoid error "package javax.xml.parsers is accessible from more than one module" -->
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.5.3</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.3</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId><!-- Same version as in https://github.com/qos-ch/logback/blob/v_1.4.5/pom.xml -->
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <version>12.4</version>
      <exclusions>
        <exclusion><!-- To avoid error "package javax.xml.parsers is accessible from more than one module" -->
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.32</version>
    </dependency>
    <dependency>
      <groupId>org.asciidoctor</groupId>
      <artifactId>asciidoctorj</artifactId>
      <version>2.5.11</version>
    </dependency>
    <dependency>
      <groupId>org.mozilla</groupId>
      <artifactId>rhino</artifactId>
      <version>1.7.14</version>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <version>4.8.3</version>
      <scope>provided</scope>
    </dependency>
    <dependency><!-- See also https://junit.org/junit5/docs/current/user-guide/#dependency-metadata-junit-jupiter -->
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.10.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.12.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>3.12.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <!-- If groupId is not specified, it defaults to org.apache.maven.plugins -->
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.12.1</version>
        <configuration>
          <release>11</release>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.3.2</version>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.1.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.1.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <archive>
            <manifestEntries>
              <Project-Version>${project.version}</Project-Version>
              <Git-Revision>${git.commit.id}</Git-Revision>
              <Build-Timestamp>${build.timestamp}</Build-Timestamp>
              <Build-Branch>${git.branch}</Build-Branch>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <!-- Instructions on http://www.mojohaus.org/appassembler/index.html are outdated, 
        (plugin 1.10), newest version is on GitHub, see https://github.com/mojohaus/appassembler -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <version>2.1.0</version>
        <executions>
          <execution>
            <id>assemble-application</id>
            <phase>package</phase>
            <goals>
              <goal>assemble</goal>
            </goals>
            <configuration>
              <!-- default value for configurationSourceDirectory is src/main/config -->
              <!-- the contents of ${configurationSourceDirectory} are copied to folder ${myConfigurationDirectory} -->
              <copyConfigurationDirectory>true</copyConfigurationDirectory>
              <configurationDirectory>${myConfigurationDirectory}</configurationDirectory>
              <!-- Windows-specific. There does not seem to be another way to do this, apart from having the user to specify this property.
              See also https://stackoverflow.com/questions/34334599/appassembler-maven-plugin-how-to-include-native-library-files-when-generating and
              https://github.com/mojohaus/appassembler/issues/62 -->
              <extraJvmArguments>-Djava.library.path="%EA_JAVA_API%"</extraJvmArguments>
              <platforms>
                <platform>windows</platform>
              </platforms>
              <repositoryLayout>flat</repositoryLayout>
              <programs>
                <program>
                  <mainClass>dk.gov.data.modellingtools.app.ExportScripts</mainClass>
                  <id>export-scripts</id>
                </program>
                <program>
                  <mainClass>dk.gov.data.modellingtools.app.ExportConceptModel</mainClass>
                  <id>export-concept-model</id>
                </program>
                <program>
                  <mainClass>dk.gov.data.modellingtools.app.ExportDataModel</mainClass>
                  <id>export-data-model</id>
                </program>
                <program>
                  <mainClass>dk.gov.data.modellingtools.app.ExportDataModelVocabulary</mainClass>
                  <id>export-data-model-vocabulary</id>
                </program>
                <program>
                  <mainClass>dk.gov.data.modellingtools.app.TransferProjects</mainClass>
                  <id>transfer-projects</id>
                </program>
                <program>
                  <mainClass>dk.gov.data.modellingtools.app.ExportSqlQueryResultToCsv</mainClass>
                  <id>export-sqlquery-result-to-csv</id>
                </program>
              </programs>
              <!-- This is the way Eclipse does it... -->
              <projectArtifactFirstInClassPath>true</projectArtifactFirstInClassPath>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <id>create-zip</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/assembly.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.1</version>
        <configuration>
          <tagNameFormat>@{project.version}</tagNameFormat>
          <!-- push manually -->
          <pushChanges>false</pushChanges>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.12.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <additionalClasspathElements>
            <additionalClasspathElement>${basedir}/src/main/config</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
      </plugin>
      <plugin><!-- From advice in https://winterbe.com/posts/2018/08/29/migrate-maven-projects-to-java-11-jigsaw/  -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.16.2</version>
        <configuration>
		  <allowMajorUpdates>false</allowMajorUpdates>
          <ruleSet>
			<ignoreVersions>
				<ignoreVersion>
					<type>regex</type>
					<version>.*-alpha.*</version>
				</ignoreVersion>
				<ignoreVersion>
					<type>regex</type>
					<version>.*-beta.*</version>
				</ignoreVersion>
				<ignoreVersion>
					<type>regex</type>
					<version>.*-M.*</version>
				</ignoreVersion>
			</ignoreVersions>			  
		  </ruleSet>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                	<excludes>
                		<exclude>xml-apis:xml-apis</exclude>
                	</excludes>
                </bannedDependencies>
                <requireMavenVersion>
                  <!-- Approved version in agency -->
                  <version>[3.6,)</version>
                  <message>Invalid Maven version. It should, at least, be 3.6</message>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.3.1</version>
        <!-- See https://maven.apache.org/plugins/maven-checkstyle-plugin/examples/upgrading-checkstyle.html
        and https://checkstyle.sourceforge.io/releasenotes.html -->
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>10.14.0</version>
          </dependency>
        </dependencies>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <includeTestResources>false</includeTestResources>
          <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
        </configuration>
        <executions>
          <execution>
            <id>validate-checkstyle</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.21.2</version>
        <executions>
          <execution>
            <id>validate-pmd</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.8.3.1</version>
        <configuration>
          <!-- https://spotbugs.readthedocs.io/en/latest/effort.html -->
          <effort>max</effort>
          <!-- Threshold Confidence: high, medium, low -->
          <threshold>medium</threshold>
          <!-- Rank: Scariest (1-4), Scary (5-9), Troubling (10-14), Of concern (15-20) -->
          <maxRank>14</maxRank>
        </configuration>
        <executions>
          <execution>
            <id>validate-spotbugs</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- See also https://stackoverflow.com/questions/12317609/maven-overview-for-the-values-of-maven-properties -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <!-- <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <echoproperties />
              </tasks>
            </configuration>
          </execution>
        </executions> -->
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.5.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.21.2</version>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.8.3.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.2.5</version>
      </plugin>
    </plugins>
  </reporting>
  <description>Modelling Tools written in Java for use with models created in Sparx Enterprise Architect.</description>
  <organization>
    <name>Styrelsen for Dataforsyning og Infrastruktur</name>
    <url>https://sdfi.dk/</url>
  </organization>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>1.11.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.14.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>4.4</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.12</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>5.10.2</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
